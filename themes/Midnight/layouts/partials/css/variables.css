{{- .Scratch.Set "sitevar" $.Site -}}
{{- partial "css/color/parse_color" .Scratch -}}
{{- range $label := (slice "main_bg" "alt_bg" "accent") -}}
  {{- $.Scratch.Set "label" $label -}}
  {{- partial "css/color/detect_light_or_dark" $.Scratch -}}
{{- end -}}

:root {
    --color-bg-page: {{ .Scratch.Get "page_bg" }};
    --color-bg-main: {{ .Scratch.Get "main_bg" }};
    --color-bg-alt: {{ .Scratch.Get "alt_bg" }};
    --color-bg-accent: {{ .Scratch.Get "accent" }};
    
    --color-fg-main: {{ .Scratch.Get "main_text" }};
    --color-fg-alt: {{ .Scratch.Get "alt_text" }};
    --color-fg-accent: {{ .Scratch.Get "accent_text" }};
    
    {{ .Scratch.Set "label" "alt_bg" }}
    --color-bg-alt-transparent: {{ trim (partial "css/color/semi_transparent" .Scratch) " \n" }};
    {{ .Scratch.Set "label" "alt_text" }}
    --color-fg-alt-transparent: {{ trim (partial "css/color/semi_transparent" .Scratch) " \n" }};
    {{ .Scratch.Set "label" "accent" }}
    --color-bg-accent-transparent: {{ trim (partial "css/color/semi_transparent" .Scratch) " \n" }};
    {{ .Scratch.Set "transparent_alpha" 0.2 -}}
    --color-bg-alert: {{ trim (partial "css/color/semi_transparent" .Scratch) " \n" }};
    {{ .Scratch.Set "transparent_alpha" 0.2 -}}
    --color-bg-code: {{ trim (partial "css/color/semi_transparent" .Scratch) " \n" }};

    {{ .Scratch.Set "label" "main_bg" }}
    {{ partial "css/color/get_rgb_numbers" .Scratch }}
    {{ partial "css/color/rgb_to_hsl" .Scratch }}
    {{ $main := dict "H" ($.Scratch.Get "hue") "S" ($.Scratch.Get "saturation") "L" ($.Scratch.Get "lightness") }}
    {{ .Scratch.Set "label" "accent" }}
    {{ partial "css/color/get_rgb_numbers" .Scratch }}
    {{ partial "css/color/rgb_to_hsl" .Scratch }}
    {{ $accent := dict "H" ($.Scratch.Get "hue") "S" ($.Scratch.Get "saturation") "L" ($.Scratch.Get "lightness") }}
    {{ .Scratch.Set "label" "alt_bg" }}
    {{ partial "css/color/get_rgb_numbers" .Scratch }}
    {{ partial "css/color/rgb_to_hsl" .Scratch }}
    {{ $alt := dict "H" ($.Scratch.Get "hue") "S" ($.Scratch.Get "saturation") "L" ($.Scratch.Get "lightness") }}
    {{ $.Scratch.Set "lightness" (div (add $alt.L $main.L) 2.0) }}
    {{ partial "css/color/hsl_to_rgb" .Scratch }}
    {{ $border := dict "R" ($.Scratch.Get "red") "G" ($.Scratch.Get "green") "B" ($.Scratch.Get "blue") }}
    --color-border-main: rgb({{ $border.R }}, {{ $border.G }}, {{ $border.B }});
    {{ $.Scratch.Set "lightness" (div (add $alt.L $accent.L) 2.0) }}
    {{ $border := dict "R" ($.Scratch.Get "red") "G" ($.Scratch.Get "green") "B" ($.Scratch.Get "blue") }}
    --color-border-nav: rgb({{ $border.R }}, {{ $border.G }}, {{ $border.B }});
    {{ .Scratch.Set "label" "main_bg" }}
    {{ partial "css/color/get_rgb_numbers" .Scratch }}
    {{ partial "css/color/rgb_to_hsl" .Scratch }}
    {{ $.Scratch.Set "lightness" (div (add $accent.L $main.L) 2.0) }}
    {{ partial "css/color/hsl_to_rgb" .Scratch }}
    {{ $border := dict "R" ($.Scratch.Get "red") "G" ($.Scratch.Get "green") "B" ($.Scratch.Get "blue") }}
    --color-border-header: rgb({{ $border.R }}, {{ $border.G }}, {{ $border.B }});

    {{- .Scratch.Set "label" "accent" }}
    {{- partial "css/color/get_rgb_numbers" .Scratch }}
    {{- partial "css/color/rgb_to_hsl" .Scratch }}
    {{- if .Scratch.Get "main_bg_is_dark" }}
        {{- .Scratch.Set "lightness" (add (.Scratch.Get "lightness") 15.0) }}
        {{- if gt (.Scratch.Get "lightness") 100.0 }}
        {{- .Scratch.Set "lightness" 100.0 }}
        {{- end }}
    {{- else }}
        {{- .Scratch.Set "lightness" (sub (.Scratch.Get "lightness") 15.0)  }}
        {{- if lt (.Scratch.Get "lightness") 0.0 }}
        {{- .Scratch.Set "lightness" 0.0 }}
        {{- end }}
    {{- end }}
    {{- partial "css/color/hsl_to_rgb" .Scratch }}
    --color-fg-alert-link: rgb({{ .Scratch.Get "red" }}, {{ .Scratch.Get "green" }}, {{ .Scratch.Get "blue" }});
    
    {{- $bglg := "" -}}
    {{- $bgmd := "" -}}
    {{- $bgsm := "" -}}
    {{- with $.Site.Params.background.src -}}
        {{- $bglg = . -}}
        {{- $bgmd = . -}}
        {{- $bgsm = . -}}
    {{- end -}}
    {{- with $.Site.Params.background.medium_src -}}
        {{- $bgmd = . -}}
        {{- $bgsm = . -}}
    {{- end -}}
    {{- with $.Site.Params.background.small_src -}}
        {{- $bgsm = . -}}
    {{- end -}}
    
    {{- with $bglg -}}
        {{- $res := resources.Get . -}}
        {{- if eq "true" (partial "has_suffix" (dict "String" . "Suffixes" (slice "jpg" "jpeg") "CaseSensitive" false)) -}}
            {{- $res = $res.Resize (printf "%dx%d" $res.Width $res.Height) -}}
        {{- end -}}
        --image-bg-lg: url("{{ partial "make_link" (dict "URL" $res.RelPermalink "Start" "/css/" "Root" $) }}");
    {{- end -}}
    {{- with $bgmd -}}
        {{- $res := resources.Get . -}}
        {{- if eq "true" (partial "has_suffix" (dict "String" . "Suffixes" (slice "jpg" "jpeg") "CaseSensitive" false)) -}}
            {{- $res = $res.Resize (printf "%dx%d" $res.Width $res.Height) -}}
        {{- end -}}
        --image-bg-md: url("{{ partial "make_link" (dict "URL" $res.RelPermalink "Start" "/css/" "Root" $) }}");
    {{- end -}}
    {{- with $bgsm -}}
        {{- $res := resources.Get . -}}
        {{- if eq "true" (partial "has_suffix" (dict "String" . "Suffixes" (slice "jpg" "jpeg") "CaseSensitive" false)) -}}
            {{- $res = $res.Resize (printf "%dx%d" $res.Width $res.Height) -}}
        {{- end -}}
        --image-bg-sm: url("{{ partial "make_link" (dict "URL" $res.RelPermalink "Start" "/css/" "Root" $) }}");
    {{- end -}}
    
    --font-sans: "Clear Sans", sans-serif;
    --font-slab: "Zilla Slab", "Georgia", "Liberation Serif", serif;
    --font-serif: "Alegreya", "Georgia", "Liberation Serif", serif;
    
    {{- $body_style := lower (default "sans-serif" $.Site.Params.fonts.body_style) -}}
    {{- $header_style := lower (default "sans-serif" $.Site.Params.fonts.header_style) -}}
    {{- if eq $body_style "serif" -}}
    --font-body: var(--font-serif);
    {{- else if eq $body_style "slab-serif" -}}
    --font-body: var(--font-slab);
    {{- else -}}
    --font-body: var(--font-sans);
    {{- end -}}
    {{- if eq $body_style $header_style -}}
    {{- if eq $body_style "serif" -}}
    --font-header: var(--font-serif);
    {{- else if eq $body_style "slab-serif" -}}
    --font-header: var(--font-slab);
    {{- else -}}
    --font-header: var(--font-sans);
    {{- end -}}
    {{- else -}}
    {{- if eq $header_style "serif" -}}
    --font-header: var(--font-serif);
    {{- else if eq $header_style "slab-serif" -}}
    --font-header: var(--font-slab);
    {{- else -}}
    --font-header: var(--font-sans);
    {{- end -}}
    {{- end -}}
    
    {{- if eq $.Site.Params.background.fixed true -}}
    --bg-attach: fixed;
    {{- else -}}
    --bg-attach: local;
    {{- end -}}
    
    {{- with $.Site.Params.background.repeat -}}
        {{- if eq . true -}}
        --bg-repeat: repeat;
        {{- else if ne . false -}}
        --bg-repeat: {{ . }};
        {{- else -}}
        --bg-repeat: no-repeat;
        {{- end -}}
    {{- else -}}
    --bg-repeat: no-repeat;
    {{- end -}}
    
    {{- with $.Site.Params.background.fit -}}
    --bg-size: {{ . }};
    {{- else -}}
    --bg-size: auto;
    {{- end -}}
    
    {{- with $.Site.Params.thumbnail_radius -}}
    --thumbnail-radius: {{ . }};
    {{- else -}}
    --thumbnail-radius: 0;
    {{- end -}}
    
    {{- if $.Site.Params.thumbnail -}}
    --site-header-padding: 5px;
    {{- else -}}
    /* Make title text line up with first menu item if no thumbnail */
    --site-header-padding: 0;
    {{- end -}}
    
    {{- if $.Site.Params.tagline -}}
    --site-title-size: 3rem;
    --site-title-padding-bottom: 0.5rem;
    {{- else -}}
    --site-title-size: 5rem;
    --site-title-padding-bottom: initial;
    {{- end -}}
    
    {{- if (.Scratch.Get "sitevar").Params.iubenda.id -}}
    {{ partial "iubenda/color.html" .Scratch }}
    --color-iubenda: {{ $.Scratch.Get "iub_color" }};
    {{- if eq ($.Scratch.Get "iub_color") "black" -}}
    --color-iubenda-bg-link: rgb(56, 56, 56);
    --color-iubenda-fg-link: #fff;
    --color-iubenda-fg-link-focus: #eee;
    {{- else -}}
    --color-iubenda-bg-link: rgb(255, 255, 255);
    --color-iubenda-fg-link: rgb(89, 99, 109);
    --color-iubenda-border: #d0d0d0 #c3c3c3 #b8b9ba;
    --color-iubenda-fg-link-focus: rgb(51, 51, 51);
    {{- end -}}
    {{ .Scratch.Set "label" "alt_bg" }}
    {{ .Scratch.Set "transparent_alpha" 0.9 -}}
    --color-iubenda-bg-container: {{ trim (partial "css/color/semi_transparent" .Scratch) " \n" }};
    {{- end -}}

    {{- if eq $.Site.Params.fonts.print_body_style "sans-serif" -}}
    --print-font-body: var(--font-sans);
    {{- else if eq $.Site.Params.fonts.print_body_style "slab-serif" -}}
    --print-font-body: var(--font-slab);
    {{- else -}}
    --print-font-body: var(--font-serif);
    {{- end -}}
    
    {{- if eq $.Site.Params.fonts.print_header_style "serif" -}}
    --print-font-header: var(--font-serif);
    {{- else if eq $.Site.Params.fonts.print_header_style "slab-serif" -}}
    --print-font-header: var(--font-slab);
    {{- else -}}
    --print-font-header: var(--font-sans);
    {{- end -}}
}

blockquote {
    /* blockquote uses a "faded" version of the main body font color */
    {{ .Scratch.Set "label" "main_text" }}
    {{- partial "css/color/get_rgb_numbers" .Scratch }}
    {{- partial "css/color/rgb_to_hsl" .Scratch }}

    {{- if .Scratch.Get "main_bg_is_dark" }}
        {{- .Scratch.Set "lightness" (sub (.Scratch.Get "lightness") 15.0) }}
        {{- if gt (.Scratch.Get "lightness") 100.0 }}
        {{- .Scratch.Set "lightness" 100.0 }}
        {{- end }}
    {{- else }}
        {{- .Scratch.Set "lightness" (add (.Scratch.Get "lightness") 15.0)  }}
        {{- if lt (.Scratch.Get "lightness") 0.0 }}
        {{- .Scratch.Set "lightness" 0.0 }}
        {{- end }}
    {{- end }}
    {{- partial "css/color/hsl_to_rgb" .Scratch -}}
    --color-fg-main-faded: rgb({{ .Scratch.Get "red" }}, {{ .Scratch.Get "green" }}, {{ .Scratch.Get "blue" }});
}

{{- if or $.Site.Params.fonts.print_body_style $.Site.Params.fonts.print_header_style -}}
@media print {
    {{ if eq $.Site.Params.fonts.print_body_style $.Site.Params.fonts.print_header_style -}}
    body { font-family: var(--print-font-body); }
    {{ end -}}
}
{{- end -}}
