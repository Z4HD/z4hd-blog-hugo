{{- $hue := .Get "hue" -}}
{{- $hue := div (mod (int $hue) 360) 360.0 -}}
{{- $saturation := div (.Get "saturation") 100.0 -}}
{{- $lightness := div (.Get "lightness") 100.0 -}}

{{- if eq $saturation 0 -}}
  {{- .Set "red" (mul $lightness 255) -}}
  {{- .Set "green" (mul $lightness 255) -}}
  {{- .Set "blue" (mul $lightness 255) -}}
{{- else -}}
  {{- if lt $lightness 0.5 -}}
    {{- .Set "q" (mul $lightness (add 1.0 $saturation)) -}}
  {{- else -}}
    {{- .Set "q" (sub (add $lightness $saturation ) (mul $lightness $saturation)) -}}
  {{- end -}}

  {{- $q := .Get "q" -}}
  {{- $p := sub (mul 2.0 $lightness) $q -}}

  {{- $scr := . -}}
  {{- range $i, $color := (slice "red" "green" "blue") -}}
    {{- $t := add $hue (sub (div 1.0 3.0) (mul $i (div 1.0 3.0))) -}}

    {{- $scr.Set "t" $t -}}
    {{- if lt $t 0 -}}
      {{- $scr.Set "t" (add $t 1.0) -}}
    {{- else if gt $t 1 -}}
      {{- $scr.Set "t" (sub $t 1.0) -}}
    {{- end -}}
    {{ $t := $scr.Get "t" }}

    {{- if lt $t (div 1.0 6.0) -}}
      {{- $scr.Set $color (add $p (mul (mul (sub $q $p) 6.0) $t)) -}}
    {{- else if lt $t 0.5 -}}
      {{- $scr.Set $color $q -}}
    {{- else if lt $t (div 2.0 3.0) -}}
      {{- $scr.Set $color (add $p (mul (mul (sub $q $p) (sub (div 2.0 3.0) $t)) 6.0)) -}}
    {{- else -}}
      {{- $scr.Set $color $p -}}
    {{- end -}}
    {{- $scr.Set $color (int (add (mul ($scr.Get $color) 255.0) 0.5)) -}}

  {{- end -}}
{{- end -}}
